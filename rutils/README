== Добро пожаловать в RuTils

RuTils - простой обработчик русского текста, позволяющий использовать и обрабатывать
русский текст несколькими несложными способами. Основная цель RuTils - сделать
разработку русскоязычных приложений на Ruby (и Rails) максимально простой и приятной (в идеале - столь же
простой как и разработку оных на английском)

Весь функционал RuTils поддерживает только UTF-8 (настройка $KCODE / KanjiCode 'u'). Стандартно работа RuTils проверяется
как на стандартной версии Ruby, так и на парсере регулярных выражений Oniguruma (правда имейте в виду, что с ним
Gilenson работает медленнее).


Это версия RuTils

	$Revision$
	
Пожалуйста упоминайте версию при сообщении ошибок.

Удостоверьтесь, что ваш скрипт правильно обрабатывает Unicode - то есть:

* Переменная $KCODE включена в режим 'u'
* В скрипт загружена библиотека jcode

Если вы используете RuTils для сайта под mod_ruby воспользуйтесь директивой RubyKanjiCode в своем httpd.conf.

== Cумма прописью

RuTils реализует сумму прописью для целых и дробных чисел, с дополнительным учетом рода. Например:

	4.propisju	=> "четыре"
	345.propisju => "триста сорок пять"
	231.propisju(2) => "двести тридцать одна"
	345.propisju(1, "чемодан", "чемодана", "чемоданов") => "триста сорок пять чемоданов"
	(212.40).propisju(2, "сволочь", "сволочи", "сволочей") => "двести двенадцать целых четыре десятых сволочи"
	
Также реализуется выбор варианта числительного в зависимости от числа

	15.items(1, "кодер", "кодера", "кодеров") => "кодеров"

== Транслит

RuTils на данный момент реализует простейший транслит "в одну сторону".

 	"Вот такое вот дело".translify => "Vot takoye vot delo"
	"Несомненный прогресс по сравнению с PHP".dirify => "nesomnennyi-progress-po-sravneniu-s-php"
	
В ближайшее время будет добавлен BiDi-транслит.

== Обработка русской типографики в HTML

RuTils включает Gilenson - порт Тыпографицы[http://pixel-apes.com/typografica] от
Pixel Apes на Ruby. Тыпографица - механизм автоматической расстановки подстановок в тексте
перед его выводом в HTML, оформляющий неразрывные пробелы, типографские кавычки
и реализующая элементарные макроподстановки.

Большое спасибо Роману Иванову aka Kukutz и Николаю Яремко aka Kuso Mendokuzee за изначальную реализацию
на PHP.

Имейте в виду, что на баги в Gilenson жаловаться разработчикам Typografica не стоит -
они вас не поймут и будут правы. Поддержку Gilenson PixelApes не осуществляют.

В комплекте также есть скрипт gilensize, которым можно поточно обрабатывать Unicode-тексты в среде UNIX
пользуясь стандартным выводом

	$ cat myfile.txt | gilensize > myfile.html
	
== Русские даты при отсутствующих локалях

TODO!

== Интеграция с Rails, RedCloth и BlueCloth

RuTils в первую очередь задумывался как максимально "прозрачный" механизм обработки русского текста
в контексте Rails-приложения. Если вы используете RuTils внутри Rails, к методам textilize и markdown
используемых в шаблонах будет автоматически подключен Gilenson (то есть все что
пропускается через textilize и markdown будет автоматически оформляться типографом).

В принципе если вы пользуетесь RedCloth или BlueCloth все что ими обрабатывается будет автоматически
обрабатываться и Gilenson'ом тоже. В случае с RedCloth Glienson автоматически заменяет стандартные для
Textile английские кавычки и типографские знаки на свои - русские.

В ближайшее время будет доступна функция чтобы это включать-выключать в зависимости от необходимости.

Cо временем планируется также "перекрыть" Inflection и автоматически получить множественное число через стандартный
string.pluralize

Также RuTils будет выполнять перегрузку сообщений об ошибках валидации ActiveRecord (сообщения
о пустых полях, полях вне допустимого диапазона значений и т.д.)

== Требования

* Ruby 1.8.2, немного прямых рук.
* Rake[http://rake.rubyforge.org], Rails, RedCloth и BlueCloth для выполнения тестов 

== Как использовать

Просто включите rutils в свою программу как gem

	require_gem 'rutils'
	
или как библиотеку

	require 'rutils'
	
При использовании в контексте Rails ruitls следует загружать после основных компонентов (чтобы сработала перегрузка функций шаблона).

== Где получить помощь

На странице проекта на RubyForge[http://rubyforge.org/projects/rutils]